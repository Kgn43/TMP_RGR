networks:
  my_net_lr_4:

volumes:
  db_volume:

services:


  db:
    build:
      context: DB
    container_name:
      db_postgres_lr_4
    # ports:
    #  - "54322:5432" # DElete ThiS
    volumes:
      - db_volume:/home/
    networks:
      - my_net_lr_4
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  api:
    image: ghcr.io/kgn43/my-api-image:latest
    container_name: api_lr_4
    # ports:
    #   - "15000:15000"
    networks:
      - my_net_lr_4
    restart: always
    depends_on:
      - db

  
  bot:
    image: ghcr.io/kgn43/my-bot-image:latest  
    container_name: bot_lr_4
#    ports:
#      - "15001:15001"
    networks:
      - my_net_lr_4
    restart: always
    depends_on:
      - api
  
  nginx:
    image: nginx:stable-alpine
    container_name: nginx_lr_4 
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro             
      - ./ssl:/etc/ssl/private:ro
      - ./ssl:/etc/ssl/certs:ro
      - ./Front/front/build:/var/www/html:ro 
    networks:
      - my_net_lr_4
    depends_on:
      - api 
    restart: always
  
  # pgadmin:
  #   build:
  #     context: pgAdmin  
  #   container_name: pgadmin_lr_3
  #   ports:
  #     - "8899:80"
  #   networks:
  #     - my_net_lr_3
  #   restart: always
  #   depends_on:
  #     - db

