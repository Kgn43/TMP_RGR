user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    

    upstream api {
        server api:15000;
        keepalive 32;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name 0.0.0.0;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name 0.0.0.0;

        ssl_certificate /etc/ssl/certs/selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/selfsigned.key;

        add_header X-Content-Type-Options "nosniff" always;

        root /var/www/html;
        index index.html;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api {
            if ($request_method = 'OPTIONS') {
            # Вместо '*' используйте $http_origin, если вы доверяете всем origin, которые будут делать OPTIONS,
            # или жестко пропишите 'https://localhost'
            add_header 'Access-Control-Allow-Origin' "$http_origin" always; # или 'https://localhost'
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, X-CSRF-TOKEN, Authorization' always; # Или то, что вам нужно
            add_header 'Access-Control-Max-Age' 86400; # 24 часа
            add_header 'Content-Type' 'text/plain charset=UTF-8'; # Для OPTIONS, чтобы браузер был доволен
            add_header 'Content-Length' 0;
            return 204; # No Content - стандартный ответ на preflight
    }


            add_header 'Access-Control-Allow-Origin' "$http_origin" always; 
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}